// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: server.proto

package server

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type URLReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *URLReq) Reset() {
	*x = URLReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLReq) ProtoMessage() {}

func (x *URLReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLReq.ProtoReflect.Descriptor instead.
func (*URLReq) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{0}
}

func (x *URLReq) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type URLResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verdict string `protobuf:"bytes,1,opt,name=verdict,proto3" json:"verdict,omitempty"`
}

func (x *URLResp) Reset() {
	*x = URLResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLResp) ProtoMessage() {}

func (x *URLResp) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLResp.ProtoReflect.Descriptor instead.
func (*URLResp) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{1}
}

func (x *URLResp) GetVerdict() string {
	if x != nil {
		return x.Verdict
	}
	return ""
}

type SMSReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sms string `protobuf:"bytes,1,opt,name=sms,proto3" json:"sms,omitempty"`
}

func (x *SMSReq) Reset() {
	*x = SMSReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSReq) ProtoMessage() {}

func (x *SMSReq) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSReq.ProtoReflect.Descriptor instead.
func (*SMSReq) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{2}
}

func (x *SMSReq) GetSms() string {
	if x != nil {
		return x.Sms
	}
	return ""
}

type SMSResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Verdict string `protobuf:"bytes,1,opt,name=verdict,proto3" json:"verdict,omitempty"`
}

func (x *SMSResp) Reset() {
	*x = SMSResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SMSResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SMSResp) ProtoMessage() {}

func (x *SMSResp) ProtoReflect() protoreflect.Message {
	mi := &file_server_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SMSResp.ProtoReflect.Descriptor instead.
func (*SMSResp) Descriptor() ([]byte, []int) {
	return file_server_proto_rawDescGZIP(), []int{3}
}

func (x *SMSResp) GetVerdict() string {
	if x != nil {
		return x.Verdict
	}
	return ""
}

var File_server_proto protoreflect.FileDescriptor

var file_server_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x61, 0x75, 0x74, 0x68, 0x22, 0x1a, 0x0a, 0x06, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x22, 0x23, 0x0a, 0x07, 0x55, 0x52, 0x4c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x64, 0x69, 0x63, 0x74, 0x22, 0x1a, 0x0a, 0x06, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x6d,
	0x73, 0x22, 0x23, 0x0a, 0x07, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x64, 0x69, 0x63, 0x74, 0x32, 0x68, 0x0a, 0x0a, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0d, 0x55, 0x72, 0x6c, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x52, 0x4c,
	0x52, 0x65, 0x71, 0x1a, 0x0d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x55, 0x52, 0x4c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x2c, 0x0a, 0x0d, 0x53, 0x4d, 0x53, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x4d, 0x53, 0x52, 0x65,
	0x71, 0x1a, 0x0d, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x4d, 0x53, 0x52, 0x65, 0x73, 0x70,
	0x42, 0x0c, 0x5a, 0x0a, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_proto_rawDescOnce sync.Once
	file_server_proto_rawDescData = file_server_proto_rawDesc
)

func file_server_proto_rawDescGZIP() []byte {
	file_server_proto_rawDescOnce.Do(func() {
		file_server_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_proto_rawDescData)
	})
	return file_server_proto_rawDescData
}

var file_server_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_server_proto_goTypes = []interface{}{
	(*URLReq)(nil),  // 0: auth.URLReq
	(*URLResp)(nil), // 1: auth.URLResp
	(*SMSReq)(nil),  // 2: auth.SMSReq
	(*SMSResp)(nil), // 3: auth.SMSResp
}
var file_server_proto_depIdxs = []int32{
	0, // 0: auth.Classifier.UrlClassifier:input_type -> auth.URLReq
	2, // 1: auth.Classifier.SMSClassifier:input_type -> auth.SMSReq
	1, // 2: auth.Classifier.UrlClassifier:output_type -> auth.URLResp
	3, // 3: auth.Classifier.SMSClassifier:output_type -> auth.SMSResp
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_server_proto_init() }
func file_server_proto_init() {
	if File_server_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SMSResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_server_proto_goTypes,
		DependencyIndexes: file_server_proto_depIdxs,
		MessageInfos:      file_server_proto_msgTypes,
	}.Build()
	File_server_proto = out.File
	file_server_proto_rawDesc = nil
	file_server_proto_goTypes = nil
	file_server_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ClassifierClient is the client API for Classifier service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ClassifierClient interface {
	UrlClassifier(ctx context.Context, in *URLReq, opts ...grpc.CallOption) (*URLResp, error)
	SMSClassifier(ctx context.Context, in *SMSReq, opts ...grpc.CallOption) (*SMSResp, error)
}

type classifierClient struct {
	cc grpc.ClientConnInterface
}

func NewClassifierClient(cc grpc.ClientConnInterface) ClassifierClient {
	return &classifierClient{cc}
}

func (c *classifierClient) UrlClassifier(ctx context.Context, in *URLReq, opts ...grpc.CallOption) (*URLResp, error) {
	out := new(URLResp)
	err := c.cc.Invoke(ctx, "/auth.Classifier/UrlClassifier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *classifierClient) SMSClassifier(ctx context.Context, in *SMSReq, opts ...grpc.CallOption) (*SMSResp, error) {
	out := new(SMSResp)
	err := c.cc.Invoke(ctx, "/auth.Classifier/SMSClassifier", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ClassifierServer is the server API for Classifier service.
type ClassifierServer interface {
	UrlClassifier(context.Context, *URLReq) (*URLResp, error)
	SMSClassifier(context.Context, *SMSReq) (*SMSResp, error)
}

// UnimplementedClassifierServer can be embedded to have forward compatible implementations.
type UnimplementedClassifierServer struct {
}

func (*UnimplementedClassifierServer) UrlClassifier(context.Context, *URLReq) (*URLResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UrlClassifier not implemented")
}
func (*UnimplementedClassifierServer) SMSClassifier(context.Context, *SMSReq) (*SMSResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SMSClassifier not implemented")
}

func RegisterClassifierServer(s *grpc.Server, srv ClassifierServer) {
	s.RegisterService(&_Classifier_serviceDesc, srv)
}

func _Classifier_UrlClassifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(URLReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassifierServer).UrlClassifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Classifier/UrlClassifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassifierServer).UrlClassifier(ctx, req.(*URLReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Classifier_SMSClassifier_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SMSReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ClassifierServer).SMSClassifier(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/auth.Classifier/SMSClassifier",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ClassifierServer).SMSClassifier(ctx, req.(*SMSReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Classifier_serviceDesc = grpc.ServiceDesc{
	ServiceName: "auth.Classifier",
	HandlerType: (*ClassifierServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "UrlClassifier",
			Handler:    _Classifier_UrlClassifier_Handler,
		},
		{
			MethodName: "SMSClassifier",
			Handler:    _Classifier_SMSClassifier_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "server.proto",
}
