services:
    backend:
        build:
            context: services/backend
        image: backend
        ports:
            - 9999:9999
        links:
            - auth
            - spam
            - classifier
            - jaeger
    auth:
        build:
            context: services/auth
        image: auth
        ports:
            - 8080:8080
        links:
            - jaeger
        environment:
            - APP_DSN=postgres://app:pass@authdb:5432/db
    authdb:
        image: postgres:12.3-alpine
        environment:
            - POSTGRES_PASSWORD=pass
            - POSTGRES_USER=app
            - POSTGRES_DB=db
        volumes:
            - ./services/auth/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d:ro
    classifier:
        build:
            context: services/classifier
        image: classifier
        ports:
            - 9090:9090
        links:
            - jaeger
            - flask
            - sms_flask
    spam:
        build:
            context: services/spam
        image: spam
        ports:
            - 8888:8888
        links:
            - jaeger
    jaeger:
        image: jaegertracing/all-in-one:1.20
        ports:
            - "5775:5775/udp"
            - "6831:6831/udp"
            - "6832:6832/udp"
            - "5778:5778"
            - "16686:16686"
    flask:
        # Путь до Dockerfile
        build: ./services/mlurl
        # Имя для создаваемого контейнера
        container_name: backend-flask
        # Создание переменных окружения в контейнере
        environment:
            - FLASK_ENV=development
            - PYTHONUNBUFFERED=True
        restart: on-failure
        volumes:
             - ./services/mlurl:/backend
    # Открываем порт в контейнер
    # Порт, который будет смотреть наружу : порт который используется внутри контейнера
        ports:
            - "5000:5000"
        command: python main.py
    sms_flask:
        # Путь до Dockerfile
        build: ./services/mlsms
        # Имя для создаваемого контейнера
        container_name: backend-flasksms
        # Создание переменных окружения в контейнере
        environment:
            - FLASK_ENV=development
            - PYTHONUNBUFFERED=True
        restart: on-failure
        volumes:
             - ./services/mlsms:/backend
    # Открываем порт в контейнер
    # Порт, который будет смотреть наружу : порт который используется внутри контейнера
        ports:
            - "5000:5000"
        command: python main.py